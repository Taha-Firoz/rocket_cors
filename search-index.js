var N=null,E="",T="t",U="u",searchIndex={};
var R=["When used as Fairing, Cors will need to redirect failed…","rocket_cors","result","error","manualresponder","Manually respond to a request with CORS checks and headers…","responder","response","string","smallvec","parseerr","to_owned","clone_into","try_from","try_into","borrow_mut","into_collection","as_result","equivalent","type_id","borrow","typeid","mapped","to_string","rocket_cors::headers","headerfieldname","accesscontrolrequestheaders","allorsome","corsoptions","origins","default","formatter","from_str","from_request","request","outcome","respond_to","serialize","deserialize","method","CorsOptions","AllOrSome","AccessControlRequestMethod","AccessControlRequestHeaders","AllowedOrigins","AllowedHeaders","Responder","ManualResponder","HeaderFieldName"];

searchIndex["rocket_cors"]={"doc":"Build Status Repository Crates.io","i":[[3,"Method",R[1],"A wrapper type around `rocket::http::Method` to support…",N,N],[3,"Origins",E,"Origins that are allowed to make CORS requests.",N,N],[12,"allow_null",E,"Whether null origins are accepted",0,N],[12,"exact",E,"Origins that must be matched exactly as provided.",0,N],[12,"regex",E,"Origins that will be matched via any regex in this list.",0,N],[3,R[40],E,"Configuration options for CORS request handling.",N,N],[12,"allowed_origins",E,"Origins that are allowed to make requests. Will be…",1,N],[12,"allowed_methods",E,"The list of methods which the allowed origins are allowed…",1,N],[12,"allowed_headers",E,"The list of header field names which can be used when this…",1,N],[12,"allow_credentials",E,"Allows users to make authenticated requests. If true,…",1,N],[12,"expose_headers",E,"The list of headers which are safe to expose to the API of…",1,N],[12,"max_age",E,"The maximum time for which this CORS request maybe cached.…",1,N],[12,"send_wildcard",E,"If true, and the `allowed_origins` parameter is `All`, a…",1,N],[12,"fairing_route_base",E,R[0],1,N],[12,"fairing_route_rank",E,R[0],1,N],[3,"Cors",E,"Response generator and Fairing for CORS",N,N],[3,"Guard",E,"A request guard to check CORS headers before a route is…",N,N],[3,R[46],E,"A `Responder` which will simply wraps another `Responder`…",N,N],[3,R[47],E,"A Manual Responder used in the \"truly manual\" mode of…",N,N],[4,"Error",E,"Errors during operations",N,N],[13,"MissingOrigin",E,"The HTTP request header `Origin` is required but was not…",2,N],[13,"BadOrigin",E,"The HTTP request header `Origin` could not be parsed…",2,N],[13,"OpaqueAllowedOrigin",E,"The configured Allowed Origins are Opaque origins. Use a…",2,N],[13,"MissingRequestMethod",E,"The request header `Access-Control-Request-Method` is…",2,N],[13,"BadRequestMethod",E,"The request header `Access-Control-Request-Method` has an…",2,N],[13,"MissingRequestHeaders",E,"The request header `Access-Control-Request-Headers` is…",2,N],[13,"OriginNotAllowed",E,"Origin is not allowed to make this request",2,N],[13,"MethodNotAllowed",E,"Requested method is not allowed",2,N],[13,"RegexError",E,"A regular expression compilation error",2,N],[13,"HeadersNotAllowed",E,"One or more headers requested are not allowed",2,N],[13,"CredentialsWithWildcardOrigin",E,"Credentials are allowed, but the Origin is set to \"*\".…",2,N],[13,"MissingCorsInRocketState",E,"A CORS Request Guard was used, but no CORS Options was…",2,N],[13,"MissingInjectedHeader",E,"The `on_response` handler of Fairing could not find the…",2,N],[4,R[41],E,"An enum signifying that some of type T is allowed, or…",N,N],[13,"All",E,"Everything is allowed. Usually equivalent to the \"*\" value.",3,N],[13,"Some",E,"Only some of `T` is allowed",3,N],[5,"catch_all_options_routes",E,"Returns \"catch all\" OPTIONS routes that you can mount to…",N,[[],[["route"],["vec",["route"]]]]],[0,"headers",E,"CORS specific Request Headers",N,N],[3,R[48],R[24],"A case insensitive header name",N,N],[3,R[42],E,"The `Access-Control-Request-Method` request header",N,N],[12,"0",E,E,4,N],[3,R[43],E,"The `Access-Control-Request-Headers` request header",N,N],[12,"0",E,E,5,N],[4,"Origin",E,"The `Origin` request header used in CORS",N,N],[13,"Null",E,"A `null` Origin",6,N],[13,"Parsed",E,"A well-formed origin that was parsed by [`url::Url::origin`]",6,N],[13,"Opaque",E,"An unknown \"opaque\" origin that could not be parsed",6,N],[6,"HeaderFieldNamesSet",E,"A set of case insensitive header names",N,N],[11,"ascii_serialization",E,"Perform an ASCII serialization of this origin.",6,[[["self"]],[R[8]]]],[11,"is_tuple",E,"Returns whether the origin was parsed as non-opaque",6,[[["self"]],["bool"]]],[6,R[44],R[1],"A list of allowed origins. Either Some origins are…",N,N],[6,"AllowedMethods",E,"A list of allowed methods",N,N],[6,R[45],E,"A list of allowed headers",N,N],[11,"is_all",E,"Returns whether this is an `All` variant",3,[[["self"]],["bool"]]],[11,"is_some",E,"Returns whether this is a `Some` variant",3,[[["self"]],["bool"]]],[11,"unwrap",E,"Unwrap a `Some` variant and get its inner value",3,[[],[T]]],[11,"some",E,"Allows some origins, with a mix of exact matches or regex…",7,[[],["self"]]],[11,"some_exact",E,"Allows some exact origins",7,[[],["self"]]],[11,"some_regex",E,"Allow some regular expression origins",7,[[],["self"]]],[11,"some_null",E,"Allow some `null` origins",7,[[],["self"]]],[11,"all",E,"Allows all origins",7,[[],["self"]]],[11,"some",E,"Allow some headers",8,[[],["self"]]],[11,"all",E,"Allows all headers",8,[[],["self"]]],[11,"validate",E,"Validates if any of the settings are disallowed,…",1,[[["self"]],[[R[2],[R[3]]],[R[3]]]]],[11,"to_cors",E,"Creates a [`Cors`] struct that can be used to respond to…",1,[[["self"]],[["cors"],[R[2],["cors",R[3]]],[R[3]]]]],[11,"from_options",E,"Create a `Cors` struct from a [`CorsOptions`]",9,[[[R[28]]],[[R[2],[R[3]]],[R[3]]]]],[11,"respond_owned",E,R[5],9,[[["f"]],[[R[4]],[R[2],[R[4],R[3]]],[R[3]]]]],[11,"respond_borrowed",E,R[5],9,[[["self"],["f"]],[[R[4]],[R[2],[R[4],R[3]]],[R[3]]]]],[11,R[6],E,"Consumes the Guard and return a `Responder` that wraps a…",10,[[[R[6]]],[[R[6]],[R[6]]]]],[11,R[7],E,"Merge a `rocket::Response` with this CORS Guard. This is…",10,[[["self"],[R[7]]],[R[7]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[11],E,E,11,[[["self"]],[T]]],[11,R[12],E,E,11,[[[T],["self"]]]],[11,R[23],E,E,11,[[["self"]],[R[8]]]],[11,"into",E,E,11,[[],[U]]],[11,R[13],E,E,11,[[[U]],[R[2]]]],[11,R[14],E,E,11,[[],[R[2]]]],[11,R[15],E,E,11,[[["self"]],[T]]],[11,R[20],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[R[21]]]],[11,R[16],E,E,11,[[],[R[9]]]],[11,R[22],E,E,11,[[["f"]],[R[9]]]],[11,R[17],E,E,11,[[],[[R[2],[R[10]]],[R[10]]]]],[11,R[18],E,E,11,[[["self"],["k"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[[T],["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[13],E,E,0,[[[U]],[R[2]]]],[11,R[14],E,E,0,[[],[R[2]]]],[11,R[15],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[R[21]]]],[11,R[16],E,E,0,[[],[R[9]]]],[11,R[22],E,E,0,[[["f"]],[R[9]]]],[11,R[17],E,E,0,[[],[[R[2],[R[10]]],[R[10]]]]],[11,R[18],E,E,0,[[["self"],["k"]],["bool"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[[T],["self"]]]],[11,"into",E,E,1,[[],[U]]],[11,R[13],E,E,1,[[[U]],[R[2]]]],[11,R[14],E,E,1,[[],[R[2]]]],[11,R[15],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[R[21]]]],[11,R[16],E,E,1,[[],[R[9]]]],[11,R[22],E,E,1,[[["f"]],[R[9]]]],[11,R[17],E,E,1,[[],[[R[2],[R[10]]],[R[10]]]]],[11,R[18],E,E,1,[[["self"],["k"]],["bool"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[11],E,E,9,[[["self"]],[T]]],[11,R[12],E,E,9,[[[T],["self"]]]],[11,"into",E,E,9,[[],[U]]],[11,R[13],E,E,9,[[[U]],[R[2]]]],[11,R[14],E,E,9,[[],[R[2]]]],[11,R[15],E,E,9,[[["self"]],[T]]],[11,R[20],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[R[21]]]],[11,R[16],E,E,9,[[],[R[9]]]],[11,R[22],E,E,9,[[["f"]],[R[9]]]],[11,R[17],E,E,9,[[],[[R[2],[R[10]]],[R[10]]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[13],E,E,10,[[[U]],[R[2]]]],[11,R[14],E,E,10,[[],[R[2]]]],[11,R[15],E,E,10,[[["self"]],[T]]],[11,R[20],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[R[21]]]],[11,R[16],E,E,10,[[],[R[9]]]],[11,R[22],E,E,10,[[["f"]],[R[9]]]],[11,R[17],E,E,10,[[],[[R[2],[R[10]]],[R[10]]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[13],E,E,12,[[[U]],[R[2]]]],[11,R[14],E,E,12,[[],[R[2]]]],[11,R[15],E,E,12,[[["self"]],[T]]],[11,R[20],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[R[21]]]],[11,R[16],E,E,12,[[],[R[9]]]],[11,R[22],E,E,12,[[["f"]],[R[9]]]],[11,R[17],E,E,12,[[],[[R[2],[R[10]]],[R[10]]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[13],E,E,13,[[[U]],[R[2]]]],[11,R[14],E,E,13,[[],[R[2]]]],[11,R[15],E,E,13,[[["self"]],[T]]],[11,R[20],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[R[21]]]],[11,R[16],E,E,13,[[],[R[9]]]],[11,R[22],E,E,13,[[["f"]],[R[9]]]],[11,R[17],E,E,13,[[],[[R[2],[R[10]]],[R[10]]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[23],E,E,2,[[["self"]],[R[8]]]],[11,"into",E,E,2,[[],[U]]],[11,R[13],E,E,2,[[[U]],[R[2]]]],[11,R[14],E,E,2,[[],[R[2]]]],[11,R[15],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[R[21]]]],[11,R[16],E,E,2,[[],[R[9]]]],[11,R[22],E,E,2,[[["f"]],[R[9]]]],[11,R[17],E,E,2,[[],[[R[2],[R[10]]],[R[10]]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[[T],["self"]]]],[11,"into",E,E,3,[[],[U]]],[11,R[13],E,E,3,[[[U]],[R[2]]]],[11,R[14],E,E,3,[[],[R[2]]]],[11,R[15],E,E,3,[[["self"]],[T]]],[11,R[20],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[R[21]]]],[11,R[16],E,E,3,[[],[R[9]]]],[11,R[22],E,E,3,[[["f"]],[R[9]]]],[11,R[17],E,E,3,[[],[[R[2],[R[10]]],[R[10]]]]],[11,R[18],E,E,3,[[["self"],["k"]],["bool"]]],[11,"from",R[24],E,14,[[[T]],[T]]],[11,R[11],E,E,14,[[["self"]],[T]]],[11,R[12],E,E,14,[[[T],["self"]]]],[11,R[23],E,E,14,[[["self"]],[R[8]]]],[11,"into",E,E,14,[[],[U]]],[11,R[13],E,E,14,[[[U]],[R[2]]]],[11,R[14],E,E,14,[[],[R[2]]]],[11,R[15],E,E,14,[[["self"]],[T]]],[11,R[20],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[R[21]]]],[11,R[16],E,E,14,[[],[R[9]]]],[11,R[22],E,E,14,[[["f"]],[R[9]]]],[11,R[17],E,E,14,[[],[[R[2],[R[10]]],[R[10]]]]],[11,R[18],E,E,14,[[["self"],["k"]],["bool"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[13],E,E,4,[[[U]],[R[2]]]],[11,R[14],E,E,4,[[],[R[2]]]],[11,R[15],E,E,4,[[["self"]],[T]]],[11,R[20],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[R[21]]]],[11,R[16],E,E,4,[[],[R[9]]]],[11,R[22],E,E,4,[[["f"]],[R[9]]]],[11,R[17],E,E,4,[[],[[R[2],[R[10]]],[R[10]]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[13],E,E,5,[[[U]],[R[2]]]],[11,R[14],E,E,5,[[],[R[2]]]],[11,R[15],E,E,5,[[["self"]],[T]]],[11,R[20],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[R[21]]]],[11,R[16],E,E,5,[[],[R[9]]]],[11,R[22],E,E,5,[[["f"]],[R[9]]]],[11,R[17],E,E,5,[[],[[R[2],[R[10]]],[R[10]]]]],[11,R[18],E,E,5,[[["self"],["k"]],["bool"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[11],E,E,6,[[["self"]],[T]]],[11,R[12],E,E,6,[[[T],["self"]]]],[11,R[23],E,E,6,[[["self"]],[R[8]]]],[11,"into",E,E,6,[[],[U]]],[11,R[13],E,E,6,[[[U]],[R[2]]]],[11,R[14],E,E,6,[[],[R[2]]]],[11,R[15],E,E,6,[[["self"]],[T]]],[11,R[20],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[R[21]]]],[11,R[16],E,E,6,[[],[R[9]]]],[11,R[22],E,E,6,[[["f"]],[R[9]]]],[11,R[17],E,E,6,[[],[[R[2],[R[10]]],[R[10]]]]],[11,R[18],E,E,6,[[["self"],["k"]],["bool"]]],[11,"from",E,E,14,[[["str"]],["self"]]],[11,"from",E,E,14,[[[R[8]]],["self"]]],[11,"from",R[1],E,2,[[["parseerror"]],["self"]]],[11,"from",E,E,2,[[[R[3]]],["self"]]],[11,"from",E,E,11,[[[R[39]]],["self"]]],[11,"eq",R[24],E,14,[[[R[25]],["self"]],["bool"]]],[11,"ne",E,E,14,[[[R[25]],["self"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["origin"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["origin"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[26]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[26]]],["bool"]]],[11,"eq",R[1],E,3,[[["self"],[R[27]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[27]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[39]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[39]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[29]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[29]]],["bool"]]],[11,"eq",E,E,1,[[[R[28]],["self"]],["bool"]]],[11,"ne",E,E,1,[[[R[28]],["self"]],["bool"]]],[11,"clone",R[24],E,14,[[["self"]],[R[25]]]],[11,"clone",E,E,6,[[["self"]],["origin"]]],[11,"clone",R[1],E,3,[[["self"]],[R[27]]]],[11,"clone",E,E,11,[[["self"]],[R[39]]]],[11,"clone",E,E,0,[[["self"]],[R[29]]]],[11,"clone",E,E,1,[[["self"]],[R[28]]]],[11,"clone",E,E,9,[[["self"]],["cors"]]],[11,R[30],E,E,3,[[],["self"]]],[11,R[30],E,E,0,[[],[R[29]]]],[11,R[30],E,E,1,[[],["self"]]],[11,"deref",R[24],E,14,[[["self"]]]],[11,"deref",R[1],E,11,[[["self"]]]],[11,"fmt",R[24],E,14,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",R[1],E,2,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",R[24],E,14,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",R[1],E,2,[[["self"],[R[31]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[31]]],[R[2]]]],[11,"hash",R[24],E,14,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"hash",R[1],E,11,[[["self"],["__h"]]]],[11,R[32],R[24],E,14,[[["str"]],[R[2]]]],[11,R[32],E,E,6,[[["str"]],[R[2]]]],[11,R[32],E,E,4,[[["str"]],[R[2]]]],[11,R[32],E,"Will never fail",5,[[["str"]],[R[2]]]],[11,R[32],R[1],E,11,[[["str"]],[R[2]]]],[11,"cause",E,E,2,[[["self"]],[["option",[R[3]]],[R[3]]]]],[11,R[33],R[24],E,6,[[[R[34]]],[[R[35],[R[3]]],[R[3]]]]],[11,R[33],E,E,4,[[[R[34]]],[[R[35],[R[3]]],[R[3]]]]],[11,R[33],E,E,5,[[[R[34]]],[[R[35],[R[3]]],[R[3]]]]],[11,R[33],R[1],E,10,[[[R[34]]],[R[35]]]],[11,R[36],E,E,2,[[[R[34]]],[["status"],[R[2],[R[7],"status"]],[R[7]]]]],[11,R[36],E,E,12,[[[R[34]]],[R[2]]]],[11,R[36],E,E,13,[[[R[34]]],[R[2]]]],[11,R[37],R[24],E,14,[[["self"],["__s"]],[R[2]]]],[11,R[37],R[1],E,3,[[["self"],["__s"]],[R[2]]]],[11,R[37],E,E,11,[[["self"],["s"]],[R[2]]]],[11,R[37],E,E,0,[[["self"],["__s"]],[R[2]]]],[11,R[37],E,E,1,[[["self"],["__s"]],[R[2]]]],[11,R[38],R[24],E,14,[[["__d"]],[R[2]]]],[11,R[38],R[1],E,3,[[["__d"]],[R[2]]]],[11,R[38],E,E,11,[[["d"]],[[R[39]],[R[2],[R[39]]]]]],[11,R[38],E,E,0,[[["__d"]],[R[2]]]],[11,R[38],E,E,1,[[["__d"]],[R[2]]]],[11,"info",E,E,9,[[["self"]],["info"]]],[11,"on_attach",E,E,9,[[["self"],["rocket"]],[["rocket"],[R[2],["rocket","rocket"]]]]],[11,"on_request",E,E,9,[[["data"],["self"],[R[34]]]]],[11,"on_response",E,E,9,[[[R[34]],["self"],[R[7]]]]]],"p":[[3,"Origins"],[3,R[40]],[4,"Error"],[4,R[41]],[3,R[42]],[3,R[43]],[4,"Origin"],[6,R[44]],[6,R[45]],[3,"Cors"],[3,"Guard"],[3,"Method"],[3,R[46]],[3,R[47]],[3,R[48]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);